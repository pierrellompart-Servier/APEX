
# ===================================================
# File: pyproject.toml
# ===================================================

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mtl-gnn-dta"
version = "1.0.0"
description = "Multi-Task Learning Graph Neural Network for Drug-Target Affinity Prediction"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torch-geometric>=2.3.0",
    "pandas>=1.5.0",
    "numpy>=1.23.0",
    "scipy>=1.9.0",
    "scikit-learn>=1.1.0",
    "rdkit>=2023.3.1",
    "biopython>=1.81",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
    "click>=8.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.0.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "mypy>=1.2.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.22.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinxcontrib-napoleon>=0.7",
]
viz = [
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
]
ml = [
    "wandb>=0.15.0",
    "tensorboard>=2.12.0",
    "optuna>=3.1.0",
]

[project.scripts]
mtl-gnn-dta = "mtl_gnn_dta.cli.main:main"
mtl-gnn-dta-train = "mtl_gnn_dta.cli.train:main"
mtl-gnn-dta-predict = "mtl_gnn_dta.cli.predict:main"
mtl-gnn-dta-preprocess = "mtl_gnn_dta.cli.preprocess:main"

[project.urls]
Homepage = "https://github.com/yourusername/MTL-GNN-DTA"
Documentation = "https://mtl-gnn-dta.readthedocs.io"
Repository = "https://github.com/yourusername/MTL-GNN-DTA.git"
Issues = "https://github.com/yourusername/MTL-GNN-DTA/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mtl_gnn_dta*"]

[tool.setuptools.package-data]
mtl_gnn_dta = ["configs/*.yaml", "configs/*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["mtl_gnn_dta"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/cli/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
